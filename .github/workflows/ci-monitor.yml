name: CI Monitor & Smoke Tests

on:
  workflow_run:
    workflows: ["backend-ci"]
    types:
      - completed
  push:
    branches: [main]
  schedule:
    - cron: "0 9 * * *"  # daily health check 9AM UTC

jobs:
  monitor:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Evaluate previous CI run
        if: ${{ github.event.workflow_run.conclusion != 'success' }}
        run: |
          echo "❌ Previous CI failed — notifying maintainer"
          curl -X POST -H "Content-Type: application/json" \
          -d '{"text":"🚨 CI failed for Wazifni main — check GitHub Actions"}' \
          ${{ secrets.SLACK_WEBHOOK_URL }}

  smoke:
    runs-on: ubuntu-latest
    needs: monitor
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.11"

      - name: Install deps
        run: pip install -r requirements.txt

      - name: Run remote smoke test
        env:
          BASE_URL: ${{ secrets.RENDER_BACKEND_URL }}
        run: |
          echo "Running smoke test against $BASE_URL"
          bash scripts/smoke.sh

      - name: Notify result
        if: ${{ failure() }}
        run: |
          curl -X POST -H "Content-Type: application/json" \
          -d '{"text":"🚨 Smoke test failed on Render after deploy"}' \
          ${{ secrets.SLACK_WEBHOOK_URL }}

  coverage-trend:
    runs-on: ubuntu-latest
    if: ${{ success() }}
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.11"

      - name: Install pytest-cov
        run: pip install pytest pytest-cov

      - name: Run coverage
        run: pytest --cov=app --cov-report=xml

      - name: Extract coverage metric
        id: cov
        run: |
          cov=$(grep -o 'line-rate="[^"]*"' coverage.xml | head -1 | sed 's/[^0-9.]//g')
          echo "coverage=$cov" >> $GITHUB_OUTPUT
          echo "Current coverage: $cov"

      - name: Save coverage trend
        uses: actions/upload-artifact@v4
        with:
          name: coverage-${{ github.run_id }}
          path: coverage.xml

      - name: Notify Slack (detailed CI summary)
        id: slack_notify
        run: |
          GITHUB_RUN_URL="https://github.com/${{ github.repository }}/actions/runs/${{ github.run_id }}"
          COVERAGE=${{ steps.cov.outputs.coverage }}
          DEPLOY_URL=${{ secrets.RENDER_BACKEND_URL }}
          JOB="${{ github.workflow }}"
          STATUS="${{ job.status }}"
          REPO="${{ github.repository }}"

          # Determine color and emoji based on job result
          if [ "$STATUS" = "success" ]; then
            COLOR="#36a64f"
            EMOJI=":white_check_mark:"
          else
            COLOR="#ff4d4d"
            EMOJI=":x:"
          fi

          # Load last coverage if file exists (simple trend memory)
          mkdir -p metrics
          LASTCOV=$(cat metrics/lastcov.txt 2>/dev/null || echo "0")
          echo "$COVERAGE" > metrics/lastcov.txt

          # Determine trend arrow
          TREND=":arrow_right:"
          if (( $(echo "$COVERAGE > $LASTCOV" | bc -l) )); then
            TREND=":arrow_up_small:"
          elif (( $(echo "$COVERAGE < $LASTCOV" | bc -l) )); then
            TREND=":arrow_down_small:"
          fi

          # Build message payload
          payload=$(jq -n \
            --arg emoji "$EMOJI" \
            --arg repo "$REPO" \
            --arg run_url "$GITHUB_RUN_URL" \
            --arg cov "$COVERAGE" \
            --arg last "$LASTCOV" \
            --arg trend "$TREND" \
            --arg color "$COLOR" \
            --arg job "$JOB" \
            --arg deploy "$DEPLOY_URL" \
            '{
              "username": "Wazifni CI Bot",
              "icon_emoji": ":robot_face:",
              "attachments": [
                {
                  "color": $color,
                  "title": "\($emoji) CI Summary — \($repo)",
                  "title_link": $run_url,
                  "fields": [
                    {"title": "Workflow", "value": $job, "short": true},
                    {"title": "Coverage", "value": "\($cov)%  \($trend)", "short": true},
                    {"title": "Last Coverage", "value": "\($last)%", "short": true},
                    {"title": "Deploy", "value": $deploy, "short": false}
                  ],
                  "footer": "GitHub Actions • $(date -u +'%Y-%m-%d %H:%M UTC')",
                  "footer_icon": "https://github.githubassets.com/images/modules/logos_page/GitHub-Mark.png"
                }
              ]
            }')

          curl -X POST -H "Content-type: application/json" \
            --data "$payload" \
            ${{ secrets.SLACK_WEBHOOK_URL }}
