name: Backend CI

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  lint-test-smoke:
    runs-on: ubuntu-latest
    defaults:
      run:
        shell: bash
        working-directory: backend

    steps:
      - uses: actions/checkout@v4

      - uses: actions/setup-python@v5
        with:
          python-version: "3.11"

      - name: Cache pip
        uses: actions/cache@v4
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-pip-${{ hashFiles('backend/requirements*.txt') }}
          restore-keys: ${{ runner.os }}-pip-

      - name: Install deps
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
          pip install pytest ruff httpx uvicorn

      - name: Lint (ruff)
        run: ruff check .

      - name: Run tests
        run: pytest -q

      - name: Smoke: boot API & hit /openapi.json
        run: |
          nohup uvicorn app.main:app --host 0.0.0.0 --port 8000 >/tmp/api.log 2>&1 &
          for i in {1..30}; do
            curl -sf http://127.0.0.1:8000/openapi.json && break
            sleep 1
          done
          curl -sf http://127.0.0.1:8000/openapi.json | python - <<'PY'
          import sys, json
          info=json.load(sys.stdin).get("info",{})
          assert "title" in info, "Missing OpenAPI title"
          print(info["title"])
          PY

      - name: Upload Release Report
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: ReleaseReport
          path: ReleaseReport.md
          if-no-files-found: ignore

  build-and-deploy:
    needs: lint-test-smoke
    if: github.ref == 'refs/heads/main' && needs.lint-test-smoke.result == 'success'
    runs-on: ubuntu-latest
    env:
      IMAGE_NAME: ghcr.io/${{ github.repository }}
      IMAGE_TAG: ${{ github.sha }}

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Login to GHCR
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Build & push image
        uses: docker/build-push-action@v6
        with:
          context: .
          push: true
          tags: ${{ env.IMAGE_NAME }}:${{ env.IMAGE_TAG }},${{ env.IMAGE_NAME }}:latest

      - name: Deploy via SSH (Docker)
        uses: appleboy/ssh-action@v1.2.0
        with:
          host: ${{ secrets.DEV_HOST }}
          username: ${{ secrets.DEV_USER }}
          key: ${{ secrets.DEV_SSH_KEY }}
          script: |
            set -e
            docker login ghcr.io -u ${{ github.actor }} -p ${{ secrets.GITHUB_TOKEN }}
            docker pull ${{ env.IMAGE_NAME }}:latest
            docker stop dataapps || true
            docker rm dataapps || true
            mkdir -p /opt/dataapps/data
            docker run -d --name dataapps \
              -p 8000:8000 \
              --env-file /opt/dataapps/.env \
              -v /opt/dataapps/data:/app/backend/app/data \
              ${{ env.IMAGE_NAME }}:latest
