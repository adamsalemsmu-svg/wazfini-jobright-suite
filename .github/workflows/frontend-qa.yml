name: Frontend QA (Lighthouse + axe-core)

on:
  push:
    branches:
      - main
  workflow_dispatch:

jobs:
  qa:
    runs-on: ubuntu-latest
    defaults:
      run:
        shell: bash
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: 'npm'
          cache-dependency-path: frontend/package-lock.json

      - name: Network diagnostics
        run: |
          echo "Checking DNS resolution for edgedl.google.com"
          nslookup edgedl.google.com || true
          echo "Checking DNS resolution for edgedl.me.gvt1.com"
          nslookup edgedl.me.gvt1.com || true
          echo "Pinging public resolver"
          ping -c1 8.8.8.8 || true

      - name: Install Chrome dependencies (self-healing)
        run: |
          set -euo pipefail
          sudo apt-get update
          sudo apt-get install -y chromium-browser || sudo apt-get install -y chromium || true
          CHROME_BIN="$(command -v chromium-browser || command -v chromium || true)"
          if [ -z "$CHROME_BIN" ]; then
            echo "❌ Chromium installation failed, retrying..."
            sudo apt-get install -y chromium || sudo apt-get install -y chromium-browser || true
            CHROME_BIN="$(command -v chromium-browser || command -v chromium || true)"
          fi
          if [ -z "$CHROME_BIN" ]; then
            echo "❌ Unable to locate Chromium binary."
            exit 1
          fi
          echo "✅ Chromium located at: ${CHROME_BIN}"
          echo "CHROME_PATH=${CHROME_BIN}" >> "$GITHUB_ENV"
          echo "AXE_CHROME_PATH=${CHROME_BIN}" >> "$GITHUB_ENV"

      - name: Verify Chrome availability
        run: |
          if ! "$CHROME_PATH" --version >/dev/null 2>&1; then
            echo "⚠️ Chrome not detected, reinstalling..."
            sudo apt-get update
            sudo apt-get install -y chromium-browser chromium-driver || sudo apt-get install -y chromium chromium-driver || true
          fi
          echo "✅ Chromium verification complete."

      - name: Install frontend dependencies
        run: |
          cd frontend
          npm ci

      - name: Build and start frontend (production)
        run: |
          cd frontend
          npm run build
          nohup npm run start -- --hostname 0.0.0.0 --port 3000 > "$GITHUB_WORKSPACE/.next-start.log" 2>&1 &
          echo $! > "$GITHUB_WORKSPACE/.next-pid"
          sleep 15

      - name: Run Lighthouse audits (with retry)
        env:
          CHROME_PATH: ${{ env.CHROME_PATH }}
        run: |
          cd frontend
          mkdir -p reports

          run_lighthouse() {
            npx lighthouse "$1" --quiet --chrome-flags="--headless --no-sandbox" \
              --output=json --output-path="$2"
          }

          echo "⚡ Running Lighthouse audits..."
          if ! run_lighthouse http://localhost:3000/en/login reports/en-login.json; then
            echo "⚠️ First attempt failed — retrying after 10 seconds..."
            sleep 10
            run_lighthouse http://localhost:3000/en/login reports/en-login.json || {
              echo "❌ Lighthouse failed twice, exiting."
              exit 1
            }
          fi

          run_lighthouse http://localhost:3000/en/dashboard reports/en-dashboard.json || true
          run_lighthouse http://localhost:3000/ar/login reports/ar-login.json || true

      - name: Run axe-core accessibility checks
        env:
          AXE_CHROME_PATH: ${{ env.CHROME_PATH }}
        run: |
          cd frontend
          npx @axe-core/cli --chrome-path "${AXE_CHROME_PATH}" \
            http://localhost:3000/en/login --save reports/axe-en-login.json || {
              echo "⚠️ Axe failed once — reinstalling Chromium and retrying..."
              sudo apt-get install -y chromium-driver || true
              npx @axe-core/cli --chrome-path "${AXE_CHROME_PATH}" \
                http://localhost:3000/en/login --save reports/axe-en-login.json
            }
          npx @axe-core/cli --chrome-path "${AXE_CHROME_PATH}" \
            http://localhost:3000/ar/login --save reports/axe-ar-login.json

      - name: Evaluate Lighthouse thresholds
        id: evaluate
        run: |
          cd frontend
          ACCESS=$(jq '.categories.accessibility.score * 100' reports/en-login.json)
          PERF=$(jq '.categories.performance.score * 100' reports/en-login.json)
          echo "Accessibility=${ACCESS}" >> "$GITHUB_OUTPUT"
          echo "Performance=${PERF}" >> "$GITHUB_OUTPUT"
          echo "Accessibility score: ${ACCESS}"
          echo "Performance score: ${PERF}"
          if [ "${ACCESS%.*}" -lt 95 ] || [ "${PERF%.*}" -lt 90 ]; then
            echo "QA thresholds failed (Accessibility >=95, Performance >=90 required)." >&2
            exit 1
          fi

      - name: Upload QA reports
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: frontend-qa-reports
          path: frontend/reports

      - name: Stop Next.js server
        if: always()
        run: |
          if [ -f "$GITHUB_WORKSPACE/.next-pid" ]; then
            kill $(cat "$GITHUB_WORKSPACE/.next-pid") || true
            rm "$GITHUB_WORKSPACE/.next-pid"
          fi
